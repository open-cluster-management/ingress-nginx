language: go
go:
  - "1.13.x"

services:
  - docker

branches:
  only:
    - master
    - /^release-[0-9]+\..*$/

addons:
  sonarcloud:
    organization: "open-cluster-management"
    token:
      secure: "WlfynmLyMLl10xlZXauuZvjynoFDxuTJuhWtPMdftCp2lCOpFqr7+dNI8NUqYFY6buWiw4s0o28+SuzH6Nebm+f8kpHNWtQoi1ZHzIFrgIxhlvaJORLaaY/KEHBb48jJVr2yo82DMsnqEySC7aahGWz6gj9tmNtQlrb2Z7q8o7Fss/aePDbp2lPYFUTpsW/44NAGgnziM0MhAGVRTYlcW4AAIMfEYOUWFYbBqHlEgTRLXWU0eDW8GRS/1C8nt3a/PcslpgjutzBQRT0InYGXAkGoO5dRDU0HJmWwQoi/ZyrCWk5q/I9+nD8+q3p9UVgMHjG8wXaLTtz+nN1UHnk/CiSLuanGOdtzDVbwGNs957ZmMjL0AAX0g9yqc+iGtdjcICstUFyDdtSk9BjrOjnJq1ebO7NazrvS3B+bVHG6Iwq6RMz+V5ebM4xdhkvYDG2Fcu6crKKNnlyxaBYZBna3C41mnz34k69kx8FslU1rNgq2uLRemY0cEzUmpWXaHyK+gyJ1lIMcTQJWr0auxIcHZniFni6fjreZAwR1sFwru8vGGV3euJQqaqGBInos5VaMG5A/ogh7qz2cQz9ayqEvbU0IGypwXrBp7rKhkImepIJRIdJUwMCqjW5RKoXierx7TmI+IkIiqUbXIJOAhgfczZicF2ToS77Mzb2F4OESLN4="
env:
  global:
    # Required
    - OS=linux
    - COMPONENT_TAG_EXTENSION="-${TRAVIS_COMMIT}"
    # Component Specific
    - COMPONENT_INIT_COMMAND=${TRAVIS_BUILD_DIR}/build/install-dependencies.sh
    - COMPONENT_BUILD_COMMAND=${TRAVIS_BUILD_DIR}/build/build.sh
    - COMPONENT_UNIT_TEST_COMMAND=${TRAVIS_BUILD_DIR}/build/run-unit-tests.sh
    - COMPONENT_E2E_TEST_COMMAND=${TRAVIS_BUILD_DIR}/build/run-e2e-tests.sh


stages:
  - build
  - unit-test
  - test-e2e
  - release-ff
  - publish

before_script:
  - make init
  # - echo "https://${GITHUB_TOKEN}:x-oauth-basic@github.com" >> ~/.git-credentials
  # - export GOPRIVATE=github.com/stolostron
  # - git config --global url."https://$GITHUB_TOKEN@github.com/stolostron".insteadOf "https://github.com/stolostron"

jobs:
  include:
    - stage: build
      name: "Build the image and push"
      script:
        - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export COMPONENT_TAG_EXTENSION="-PR${TRAVIS_PULL_REQUEST}-${TRAVIS_COMMIT}"; fi;
        - make component/build
        - make component/push
        - if [ "$IMAGE_SCAN" != "false" ]; then make security/scans; fi;
    - stage: unit-test
      name: "Build and run unit tests"
      script:
        - make component/test/unit
        - make sonar/go
        - make copyright-check TRAVIS_BRANCH=${TRAVIS_BRANCH}
    - stage: test-e2e
      name: "Run e2e tests"
      if: type = pull_request
      script:
        - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export COMPONENT_TAG_EXTENSION="-PR${TRAVIS_PULL_REQUEST}-${TRAVIS_COMMIT}"; fi;
        - make component/pull
        - make component/test/e2e
    - stage: release-ff
      name: "Push commits to current release branch"
      if: type = push AND branch =~ /^master$/
      script:
        - make component/build
        - make release-ff
    - stage: publish
      name: "Publish the image to quay with an official version/sha tag and publish entry to integration pipeline stage"
      if: type = push AND branch =~ /^release-[0-9]+\..*$/
      script:
        - make pipeline-manifest/update PIPELINE_MANIFEST_COMPONENT_SHA256=${TRAVIS_COMMIT} PIPELINE_MANIFEST_COMPONENT_REPO=${TRAVIS_REPO_SLUG} PIPELINE_MANIFEST_BRANCH=${TRAVIS_BRANCH}
